using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project_STSBackend.Data.Infrastructure
{
    public class DatabaseFactory : Disposable, IDatabaseFactory
    {
        private readonly AppDbContext _sqlContext;
        private AppDbContext _dataContext;

        public DatabaseFactory(AppDbContext sqlContext)
        {
            _sqlContext = sqlContext;
        }
        public AppDbContext Get()
        {
            return _dataContext ??= _sqlContext;
        }

        protected override async void DisposeCore()
        {
            if (_dataContext != null)
            {
                await _dataContext.DisposeAsync();
            }

            base.DisposeCore();
        }

    }

    public interface IDatabaseFactory : IDisposable
    {
        AppDbContext Get();
    }
}
